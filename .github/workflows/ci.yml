name: Security Scan on Push

on:
  push:
    branches:
      - main  # Runs only on pushes to main branch
      - dev   # (Optional) Add other branches if needed

permissions:
  contents: read  # Allow access to repo contents

jobs:
  security_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch previous commit for diff

      - name: Get Code Diff
        run: |
          git diff HEAD^ > code_diff.txt
          echo "Code Diff:"
          cat code_diff.txt

      - name: Send Code Diff to AI Agent
        id: security_scan
        run: |
          RESPONSE=$(curl -X POST -H "Content-Type: application/json" \
            -d "{\"diff\": \"$(cat code_diff.txt)\"}" \
            https://agentapi.vercel.app/chat)

          echo "$RESPONSE" > ai_response.json  # Save response for visualization
          echo "status=$(echo $RESPONSE | jq -r '.status')" >> $GITHUB_ENV

      - name: Visualize AI Response & Code Diff
        run: |
          echo "## üîç AI Security Scan Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### üìå Code Diff" >> $GITHUB_STEP_SUMMARY
          echo '```diff' >> $GITHUB_STEP_SUMMARY
          cat code_diff.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### ü§ñ AI Analysis" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          cat ai_response.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Take Action Based on AI Decision
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          STATUS="${{ env.status }}"

          if [[ "$STATUS" == "Approve Commit: No vulnerabilities found" ]]; then
            echo "‚úÖ Commit Approved."

          elif [[ "$STATUS" == "Warning: Minor issue detected" ]]; then
            echo "‚ö†Ô∏è Security Warning: Minor issues found."
            echo "Check the AI report in the workflow summary."

          elif [[ "$STATUS" == "Block Commit: Critical vulnerability found" ]]; then
            echo "üö® Blocking commit due to critical vulnerabilities."
            exit 1
          fi
