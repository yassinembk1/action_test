name: AI Security Scan & Slack Notification

on:
  push:
    branches:
      - main  # Adjust if needed

jobs:
  security_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Ensure we have the last commit for diff comparison

      - name: Generate Code Diff
        run: |
          git diff HEAD^ > code_diff.txt || echo "No previous commit, no diff available" > code_diff.txt
          cat code_diff.txt  # Debugging

      - name: Send Code Diff to AI Agent
        id: ai_scan
        run: |
          DIFF_CONTENT=$(jq -Rs . < code_diff.txt)
          if [ -z "$DIFF_CONTENT" ]; then
            FULL_QUESTION="No code diff available. No security analysis possible."
          else
            FULL_QUESTION="Analyze this code diff for vulnerabilities:\n$DIFF_CONTENT"
          fi
          JSON_PAYLOAD=$(jq -n --arg question "$FULL_QUESTION" '{question: $question}')
          echo "üîç Sending AI request to API..."
          echo "JSON Payload: $JSON_PAYLOAD"
          RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" -d "$JSON_PAYLOAD" https://agentapi.vercel.app/chat 2>&1)
          HTTP_CODE=$? # Capture the exit code
          echo "$RESPONSE" > ai_response.json
          if [ $HTTP_CODE -ne 0 ]; then
            echo "‚ùå API Request Failed with code $HTTP_CODE"
            echo '{"response": "API Request Failed"}' > ai_response.json
          elif [ ! -s ai_response.json ]; then
            echo "‚ùå No AI response available!"
            echo '{"response": "No AI response available"}' > ai_response.json
          fi
          echo "‚úÖ AI Response Received:"
          cat ai_response.json  # Debugging

      - name: Upload AI Response
        uses: actions/upload-artifact@v4
        with:
          name: ai_response
          path: ai_response.json
          retention-days: 1

  send_slack_message:
    runs-on: ubuntu-latest
    needs: security_scan
    steps:
      - name: Download AI Response
        uses: actions/download-artifact@v4
        with:
          name: ai_response

      - name: Send Slack Message
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          AI_RESPONSE=$(jq -r '.response' ai_response.json)
          TRUNCATED_RESPONSE=$(echo "$AI_RESPONSE" | head -c 2000)  # Slack limit
          SLACK_MESSAGE="üîç *AI Security Scan Report*\n\n*Analysis:*\n$TRUNCATED_RESPONSE\n"
          curl -X POST -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
          -H "Content-type: application/json" \
          --data '{
            "channel": "C08EEK2A8EN",
            "text": "'"$SLACK_MESSAGE"'"
          }' \
          https://slack.com/api/chat.postMessage
