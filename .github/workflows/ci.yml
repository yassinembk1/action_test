on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate Code Diff
        run: |
          git fetch --unshallow || true
          git diff HEAD^ > code_diff.txt || git diff --staged > code_diff.txt || echo "No diff available" > code_diff.txt

      - name: Send Code Diff to AI Agent
        id: security_scan
        run: |
          DIFF_CONTENT=$(jq -Rs . < code_diff.txt)
          JSON_PAYLOAD=$(jq -n --arg question "Does this code contain security vulnerabilities?" --arg diff "$DIFF_CONTENT" '{question: $question, diff: $diff}')

          echo "üîç Sending AI request..."
          RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" -d "$JSON_PAYLOAD" https://agentapi.vercel.app/chat)
          echo "$RESPONSE" > ai_response.json

          echo "üîç AI Response Received:"
          cat ai_response.json  # Debugging

          jq . ai_response.json  # Pretty-print for logs
          echo "status=$(jq -r '.status // "Error: No status found"' ai_response.json)" >> $GITHUB_ENV

      - name: Upload AI Response
        uses: actions/upload-artifact@v3
        with:
          name: ai_response
          path: ai_response.json

  send_slack_message:
    runs-on: ubuntu-latest
    needs: security_scan
    steps:
      - name: Download AI Response
        uses: actions/download-artifact@v3
        with:
          name: ai_response

      - name: Verify AI Response
        run: |
          if [ ! -s ai_response.json ]; then
            echo "‚ùå No AI response available!"
            echo '{"response": "No AI response available"}' > ai_response.json
          fi
          echo "‚úÖ AI Response Found:"
          cat ai_response.json  # Debugging

      - name: Send Slack Message
        run: |
          AI_RESPONSE=$(jq -r '.response' ai_response.json)
          TRUNCATED_RESPONSE=$(echo "$AI_RESPONSE" | head -c 2000)  # Limit to 2000 chars

          SLACK_MESSAGE="üîç *AI Security Scan Report*\n\n"
          SLACK_MESSAGE+="*üîé Analysis:*\n$TRUNCATED_RESPONSE\n\n"

          curl -X POST -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
          -H "Content-type: application/json" \
          --data '{
            "channel": "C08EEK2A8EN", 
            "text": "'"$SLACK_MESSAGE"'"
          }' \
          https://slack.com/api/chat.postMessage
